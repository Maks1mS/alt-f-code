#! /bin/sh

#set -x

DESC="A Fast, Easy and Free Bittorrent client"
NAME=transmission-daemon
TYPE=user
NEED_ALTF_DIR=1

RC_USER=transmission
RC_USERN=13
RC_GROUP=BT
RC_GROUPN=201
RC_DESC="Transmission daemon"
RC_START_STOP=-x

LOGDIR=/var/log/transmission
LOGFILE=$LOGDIR/transmission.log

PIDDIR=/var/run/transmission
PIDFILE=$PIDDIR/transmission.pid

TRANSMISSION_HOME=/var/lib/transmission
TRANSMISSION_CDIR=/etc/transmission
TRANSMISSION_CONF=$TRANSMISSION_CDIR/transmission.conf
TRANSMISSION_CONF2=$TRANSMISSION_HOME/settings.json

TRANSMISSION_DIRS="$LOGDIR $PIDDIR $TRANSMISSION_HOME $TRANSMISSION_CDIR"

SMB_CONF=/etc/samba/smb.conf

OPTS="--logfile $LOGFILE --pid-file $PIDFILE --config-dir=$TRANSMISSION_HOME"

. /etc/init.d/common

check_net() {
	#set kernel receive and send buffer
	#sysctl -w net.core.rmem_max=4194304 net.core.wmem_max=1048576 >& /dev/null
	RMMAX=4194304
	WMMAX=1048576

	if test $(sysctl -n net.core.rmem_max) -lt $RMMAX; then
			sysctl -w net.core.rmem_max=$RMMAX >& /dev/null
	fi

	if test $(sysctl -n net.core.wmem_max) -lt $WMMAX; then
			sysctl -w net.core.wmem_max=$WMMAX >& /dev/null
	fi

	# FIXME: this seems to not be working on 3.00 when rpc-bind-address is set to "::"
	# to listen on IPv6, then rpc-whitelist-enabled needs to be set to false?
	network=$(hostname -i | awk -F. '{printf "%d.%d.%d.*", $1,$2,$3}')
	if ! grep -q $(echo $network | sed 's/[.*]/\\&/g') "$TRANSMISSION_CONF"; then
		sed -i -e 's|.*"rpc-whitelist":.*|    "rpc-whitelist": "127.0.0.1,'$network'",|' \
			-e 's|.*"rpc-host-whitelist":.*|    "rpc-host-whitelist": "127.0.0.1,::1,'$network'",|' \
			"$TRANSMISSION_CONF"
	fi
}

check_dirs() {
	eval $(awk '/"download-dir"/ { \
			gsub(",|\\\\", "", $2); printf "DOWNLOAD_DIR=%s;", $2 } \
		/"watch-dir"/ { \
			gsub(",|\\\\", "", $2); printf "WATCH_DIR=%s;", $2 } \
		/"incomplete-dir"/ { \
			gsub(",|\\\\", "", $2); printf "INCOMPLETE_DIR=%s;", $2 }' \
		"$TRANSMISSION_CONF")

	if ! test -d "$DOWNLOAD_DIR" -a -d "$WATCH_DIR" -a -d "$INCOMPLETE_DIR"; then
		echo "$NAME: Folders does not exist, you must configure Transmission first."
		exit 1
	fi
}

for i in $TRANSMISSION_DIRS; do
	if ! test -d $i; then mkdir -p $i; fi
done

if ! test -s $TRANSMISSION_CONF -a -s $TRANSMISSION_CONF2; then
	transmission-daemon -d -t -u transmission -v transmission \
	--watch-dir "/Public" --download-dir "" --incomplete-dir "" >& $TRANSMISSION_CONF

	sed -i	-e 's|.*"umask":.*|    "umask": 2, |' \
		-e 's|.*"message-level":.*|    "message-level": 1, |' $TRANSMISSION_CONF
fi

if test $TRANSMISSION_CONF2 -nt $TRANSMISSION_CONF; then
	mv $TRANSMISSION_CONF2 $TRANSMISSION_CONF
fi

if ! test -h $TRANSMISSION_CONF2; then
	ln -sf $TRANSMISSION_CONF $TRANSMISSION_CONF2
fi

check_user $TRANSMISSION_DIRS

case "$1" in
	start)
		check_dirs
		check_net
		start $NAME --chuid $RC_USER:$RC_GROUP -- $OPTS
		;;
	stop) stop $NAME ;;
	status) status $NAME ;;
	reload) reload $NAME ;;
	restart) restart $NAME ;;
	*) usage $0 "start|stop|status|restart|reload" ;;
esac
